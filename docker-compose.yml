version: "3.8"
services:
    postgres:
        image: postgres
        restart: unless-stopped
        env_file:
            - "./ory/.env"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        logging:
          options:
            max-size: 10m
            max-file: "3"
        ports:
          - '5432:5432'
        volumes:
          - ./ory/postgres-data:/var/lib/postgresql/data
          # copy the sql script to create tables
          # - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    kratos-migrate:
        depends_on:
            - postgres
        image: bazel/ory/kratos:amazon_image
        restart: on-failure
        command:
            migrate -c kratos-production.yml sql -e --yes
        networks:
            - ory
    kratos:
        depends_on:
            - kratos-migrate
        image: bazel/ory/kratos:amazon_image
        restart: unless-stopped
        command: serve -c kratos-production.yml --dev --watch-courier
        ports:
            - 4433:4433
            - 4434:4434
        networks:
            - ory
    kratos-import:
        depends_on:
            - kratos
        image: bazel/ory/kratos:amazon_image
        restart: "no"
        entrypoint: ["/bin/sh","-c"]
        command: 
            - |
              sleep 30
              kratos import identities admin.json
    dynamodb-local:
        command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
        image: "amazon/dynamodb-local:latest"
        container_name: dynamodb-local
        ports:
            - "8000:8000"
        volumes:
            - "./dynamodb/dynamodb-data:/home/dynamodblocal/data"
        working_dir: /home/dynamodblocal
    filter_service:
        restart: unless-stopped
        image: "bazel/filter_service:amazon_image"
        container_name: filter_service
        env_file:
            - "./filter_service/.env"
        ports:
            - "50051:50051"
    crud_service:
        restart: unless-stopped
        image: "bazel/crud_service:amazon_image"
        container_name: crud_service
        env_file:
            - "./crud_service/.env"
        ports:
            - "5656:5656"
    sveltekit:
        restart: unless-stopped
        image: "bazel/sveltekit_service:amazon_image"
        container_name: sveltekit_service
        env_file:
            - "./sveltekit/.env"
        ports:
            - "3000:3000"

    
